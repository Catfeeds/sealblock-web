@Rui 今天我大致理解了下api文档，提几个问题啊
1）钱包控制地址，跟实际冷钱包的地址是两个不同地址么，这个地址主要修饰于当前账户，不指向到具体的冷钱包
是的。

2）关于账户创建流程，能否将绘制个简易的流程图，我们现在理解的貌似是：
App生成私钥 -> 跟SealBlock交互 -> App -> 服务端.
服务器如何甄别，未经SealBlock授权过的注册信息上报的？
这个流程图会尽快提供，但你们的理解已经很到位了。

3）转账交易流程，是从App先私钥签名后，交由服务端进行验证（这一步服务端只有验证权利，转发至SealBlock没有再一次的数据签名包装）
非常好的问题。这是目前的设计： APP用控制私钥签名，发送至服务器端，服务器转发至SealBlock硬件，SealBlock硬件验证通过后用真正的钱包私钥对交易签名并返回给服务器端。服务器并不进行签名。如果服务器需要更好的控制，可以在服务器端生成一个控制私钥，以后每笔交易需要由APP端和服务器端的私钥分别签名，SealBlock才会处理。

当前方案下，我们总结几点
1）app端主要增加一个公-私钥的机制，用于控制 app<->服务器，App<->SealBlock通讯；  是的。
2）针对具体到币的交易数据打包，未来是交由服务器端来完成的。App端只需要使用其账户私钥进行交易数据的签名步骤； 是的，这样便于以后支持多币种。支持新的币种只需升级服务器端，无需升级APP端。
3）SealBlock只做交易信息的核实、调用冷钱包私钥的加密输出，最终还是由外部服务端来完成 公链的广播交互    是的。